deploy:
  runs-on: self-hosted
  needs: build-and-push

  steps:
    # Step 1: Notify Google Chat - Deployment Started
    - name: Notify Google Chat - Deployment Started
      shell: pwsh
      run: |
        $headers = @{ "Content-Type" = "application/json" }
        $body = '{"text": "üöÄ Docker Deployment started for *sampledocker*"}'
        Invoke-WebRequest -Uri "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" -Method Post -Headers $headers -Body $body

    # Step 2: Pull the latest image
    - name: Pull latest Docker image
      run: docker pull jeevanjames2000/sampledocker:latest

    # Step 3: Stop and remove the existing container
    - name: Stop and remove existing container
      shell: pwsh
      run: |
        docker stop sampledocker 2> $null
        docker rm sampledocker 2> $null

    # Step 4: Run the updated container
    - name: Run updated container
      run: docker run -d -p 7000:7000 --name sampledocker jeevanjames2000/sampledocker:latest

    # Step 5: Notify Google Chat - Deployment Successful
    - name: Notify Google Chat - Deployment Successful
      if: success()
      shell: pwsh
      run: |
        $headers = @{ "Content-Type" = "application/json" }
        $body = '{"text": "‚úÖ *sampledocker* deployed successfully!"}'
        Invoke-WebRequest -Uri "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" -Method Post -Headers $headers -Body $body

    # Step 6: Notify Google Chat - Deployment Failed
    - name: Notify Google Chat - Deployment Failed
      if: failure()
      shell: pwsh
      run: |
        $headers = @{ "Content-Type" = "application/json" }
        $body = '{"text": "‚ùå *sampledocker* deployment failed!"}'
        Invoke-WebRequest -Uri "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" -Method Post -Headers $headers -Body $body
